@{
    ViewData["Title"] = "Privacy";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - MyApp</title>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const contentDiv = document.getElementById('protectedContent');

            async function fetchProtectedData() {
                let accessToken = localStorage.getItem('accessToken');
                const refreshToken = localStorage.getItem('refreshToken');

                if (!accessToken) {
                    alert('No access token found. Please login again.');
                    window.location.href = '@Url.Action("Index", "Home")';
                    return;
                }

                try {
                    const response = await fetch('@Url.Action("Privacy", "Home")', {
                        method: 'GET',
                        headers: {
                            'Authorization': `Bearer ${accessToken}`
                        }
                    });

                    if (response.ok) {
                        const data = await response.text();
                        contentDiv.innerHTML = data;
                    } else if (response.status === 401) {
                        // Попытка обновить Access токен
                        const refreshResponse = await fetch('/refresh-token', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                accessToken: accessToken,
                                refreshToken: refreshToken
                            })
                        });

                        if (refreshResponse.ok) {
                            const refreshData = await refreshResponse.json();
                            localStorage.setItem('accessToken', refreshData.accessToken);
                            localStorage.setItem('refreshToken', refreshData.refreshToken);
                            accessToken = refreshData.accessToken;

                            // Повторный запрос с новым Access токеном
                            const retryResponse = await fetch('@Url.Action("Privacy", "Home")', {
                                method: 'GET',
                                headers: {
                                    'Authorization': `Bearer ${accessToken}`
                                }
                            });

                            if (retryResponse.ok) {
                                const retryData = await retryResponse.text();
                                contentDiv.innerHTML = retryData;
                            } else {
                                alert('Failed to fetch protected data after token refresh.');
                                window.location.href = '@Url.Action("Index", "Home")';
                            }
                        } else {
                            alert('Refresh token is invalid or expired. Please login again.');
                            window.location.href = '@Url.Action("Index", "Home")';
                        }
                    } else {
                        const error = await response.text();
                        alert(`Error: ${error}`);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while fetching protected data.');
                }
            }

            fetchProtectedData();
        });
    </script>
</head>
<body>
    <h2>Privacy - Protected Page</h2>
    <div id="protectedContent">
        Loading protected content...
    </div>
</body>
</html>
